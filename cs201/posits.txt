two parameters: the number of bits and the /maximum/ number of exponent bits

n = the total number
es = the max number of exponent bits

for our examples we'll pick n=8, es=2

b7 b6 b5 b4 b3 b2 b1 b0

b7 = sign bit, 0 means positive, 1 means negative

if the next bit is a 1, then continue reading bits until either you get to the end *or* you hit a 0

count that number of bits and call it "r"(egime)

if there are bits left over after counting the regime bits, count up to |es| of them, and those are the exponent bits (call this number "e")

if there are bits left over after counting the exponent, those are the significand bits

if the first bit of the regime is 1:
(-1)^(sign bit) * 2^((r-1) * 2^es) * 2^e * (1+|m|)

if the first bit of the regime is 0:
(-1)^(sign bit) * 2^(-r  * 2^es) * 2^e * (1+|m|)

0 1110 11 1

sign bit is 0
r = 3
e = 3
|m| = 0.5

1 * 2^(2 * 2^2) * 2^3 * 1 + 0.5
    = 256 * 8 * 1.5 = 3072

0 0001 00 1
    = 2^(-3 * 2^2) * 2^3 * (1.5)
    = 2^-12 * 2^3 * 1.5 = 2^-9 * 1.5